"use strict";
var http_1 = require('../http');
var GenericService = (function () {
    function GenericService(applicationContext, http) {
        if (http === void 0) { http = new http_1.HttpRequest; }
        this.applicationContext = applicationContext;
        this.http = http;
    }
    GenericService.prototype.getApplicationAccessToken = function () {
        return this.applicationContext.secret;
    };
    GenericService.prototype.create = function (model) {
        return Promise.reject(new Error('create is unimplemented on this service'));
    };
    GenericService.prototype.get = function (id) {
        return Promise.reject(new Error('get is unimplemented on this service'));
    };
    GenericService.prototype.update = function (model) {
        return Promise.reject(new Error('update is unimplemented on this service'));
    };
    GenericService.prototype.list = function (criteria) {
        return Promise.reject(new Error('list is unimplemented on this service'));
    };
    GenericService.prototype.delete = function (id) {
        return Promise.reject(new Error('delete is unimplemented on this service'));
    };
    return GenericService;
}());
exports.GenericService = GenericService;
//# sourceMappingURL=service.js.map