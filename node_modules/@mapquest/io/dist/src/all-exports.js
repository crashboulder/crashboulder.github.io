"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var security_1 = require('./security');
exports.ApplicationAccess = security_1.ApplicationAccess;
var service_1 = require('./generic/service');
exports.GenericService = service_1.GenericService;
var geofences_1 = require('./geofences');
exports.GeofenceService = geofences_1.GeofenceService;
var speed_alerts_1 = require('./speed-alerts');
exports.SpeedAlertService = speed_alerts_1.SpeedAlertService;
var transitions_1 = require('./transitions');
exports.EnterTransition = transitions_1.EnterTransition;
exports.ExitTransition = transitions_1.ExitTransition;
exports.DwellTransition = transitions_1.DwellTransition;
exports.SpeedTransition = transitions_1.SpeedTransition;
var applications_1 = require('./applications');
exports.ApplicationService = applications_1.ApplicationService;
var clients_1 = require('./clients');
exports.ClientService = clients_1.ClientService;
var HOST = 'http://alpha.mapquest.io';
var HOSTS = {
    'et-devices': HOST,
    'et-rules': HOST,
    'et-auth': HOST
};
exports.ENVIRONMENT_CONFIGURATION = {
    API_HOSTS: {
        alpha: HOSTS
    }
};
exports.CURRENT_ENVIRONMENT = exports.ENVIRONMENT_CONFIGURATION.API_HOSTS['alpha'];
var Webhook = (function () {
    function Webhook(url) {
        this.url = url;
        this.type = 'http';
    }
    return Webhook;
}());
exports.Webhook = Webhook;
var SlackNotification = (function () {
    function SlackNotification(url, username) {
        this.url = url;
        this.username = username;
        this.type = 'slack';
    }
    return SlackNotification;
}());
exports.SlackNotification = SlackNotification;
var CircularRegion = (function () {
    function CircularRegion(longitude, latitude, radius) {
        this.longitude = longitude;
        this.latitude = latitude;
        this.radius = radius;
        this.type = 'circle';
    }
    return CircularRegion;
}());
exports.CircularRegion = CircularRegion;
var Configuration = {
    secret: ''
};
function setApplicationSecret(secret) {
    Configuration.secret = secret;
}
exports.setApplicationSecret = setApplicationSecret;
function getApplicationSecret() {
    return Configuration.secret;
}
exports.getApplicationSecret = getApplicationSecret;
__export(require('./http/'));
//# sourceMappingURL=all-exports.js.map