export interface IObservation {
    location?: ILocation;
    observedAt: number;
    compassBearing?: number;
    instantenousSpeed?: number;
    event?: IEvent;
    sequence?: string;
    sessionId?: string;
    receivedAt: number;
}
export interface ILocation {
    longitude: number;
    latitude: number;
    haccuracy: number;
    altitude?: number;
}
export declare class StartedRoute {
    routeSessionId: string;
    readonly type: string;
    constructor(routeSessionId: string);
}
export declare class AbandonedRoute {
    routeSessionId: string;
    readonly type: string;
    constructor(routeSessionId: string);
}
export declare class CompletedRoute {
    routeSessionId: string;
    readonly type: string;
    constructor(routeSessionId: string);
}
export declare type IEvent = StartedRoute | AbandonedRoute | CompletedRoute;
export declare class ObservationPayload {
    clientId: string;
    observations: IObservation[];
    sessionId: string;
    constructor(clientId: string, observations: IObservation[], sessionId?: string);
    toBody(): any;
}
